struct node
{
    int r;
    int c;
    int d;
};

bool isValid(int r, int c, int R, int C){
    return r >= 0 && c >= 0 && r < R && c < C;
}

int distanceTraversed(vector<vector<int>> &lot)
{
    int R = lot.size();
    if(R == 0) return -1;
    
    cout<<"hello"<<endl;
    int C = lot[0].size();
    
    queue<node> q;
    q.push({0,0,0});
    
    while(q.size() > 0)
    {
        node cur = q.front();
        q.pop();
        int r = cur.r;
        int c = cur.c;
        int d = cur.d;
        
        //cout<<r<<" "<<c<<" "<<d<<endl;
        
        if(!isValid(r,c,R,C)) continue;
        if(lot[r][c] == 9) return d;
        
        lot[r][c] = 0;
        q.push({r+1, c, d+1});
        q.push({r-1, c, d+1});
        q.push({r, c+1, d+1});
        q.push({r, c-1, d+1});
    }
    
    return -1;
    
    
}

int main() {
    vector<vector<int>> v = {{1,0,0}, {1,0,0}, {1,9,1}};
 
 
    cout<<distanceTraversed(v);
    
    
    
}
